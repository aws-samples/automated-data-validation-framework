{
    "AWSTemplateFormatVersion" : "2010-09-09",
  
    "Description" : "This CloudFormation creates a EMR cluster with Spark,Hive running on it. Also, EMR has two steps for post launch which download the jars for Blog use case set up and Create hive tables on top of files. Author: Dipal Mahajan",
    "Parameters" : {
  
      "VpcId" : {
        "Type" : "AWS::EC2::VPC::Id",
        "Description" : "VpcId of your existing Virtual Private Cloud (VPC)"
      },
  
      "Subnets" : {
        "Type" : "CommaDelimitedList",
        "Description" : "The list of SubnetIds(comma seperated), for at least two Availability Zones in the region in your Virtual Private Cloud (VPC) for Source Database"
      },
  
      "MyEMRSubnetGroup" : {
        "Type" : "AWS::EC2::Subnet::Id",
        "Description" : "Subnet where you want EMR to run"
      },
  
      "EMRKeyPair" : {
  
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
  
      },
      "EMRLogFileDir" : {
      "Default": "emrlogs",
      "Description": "Name of an existing S3 Bucket to store EMR jobs execution Logs",
      "Type": "String"
      },
  
      "DBName": {
        "Default": "MyDatabase",
        "Description" : "The database name",
        "Type": "String",
        "MinLength": "1",
        "MaxLength": "64",
        "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
        "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
      },
  
  
      "DBClass" : {
        "Default" : "db.m5.large",
        "Description" : "Database instance class",
        "Type" : "String",
        "AllowedValues" : [ "db.m1.small","db.t2.micro", "db.m1.large", "db.m5.large", "db.m2.xlarge", "db.m2.2xlarge", "db.m2.4xlarge" ],
        "ConstraintDescription" : "must select a valid database instance type."
      },
     "myEMRCoreSize" : {
      "Default" : "2",
       "Type" : "String",
       "Description" : "Number of Core instances on EMR cluster"
  
      },
  
      "myEMRInstanceType" : {
          "Default" : "m5.xlarge",
          "Description" : "EMR Instance class",
          "Type" : "String",
          "AllowedValues" : ["m5.xlarge", "m4.xlarge", "r3.xlarge" , "r3.2xlarge", "r3.4xlarge" , "c3.xlarge" , "c3.2xlarge" , "c3.4xlarge" , "c3.8xlarge" ]
      },
  
      "DBAllocatedStorage" : {
        "Default": "5",
        "Description" : "The size of the database (Gb)",
        "Type": "Number",
        "MinValue": "5",
        "MaxValue": "1024",
        "ConstraintDescription" : "must be between 5 and 1024Gb."
      },
      "myEMRCDIR" : {
        "Description" : "CIDR of your EMR subnet  (allows connection on port 3306 from EMR cluster to Source Database",
        "Type": "String",
        "MinLength": "9",
        "MaxLength": "18",
        "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
     }
    },
  
    "Resources" : {
  
      "DQBlogBucket":            {
        "Type" : "AWS::S3::Bucket",
        "Properties" : {
            "BucketName" : {
                           "Fn::Sub": "dqblogbucket-${AWS::AccountId}"
                        }
                    }
        },
      "SecretManagerPolicy": {
        "Type": "AWS::IAM::ManagedPolicy",
        "Properties": {
            "PolicyDocument": {
      "Version": "2012-10-17",
      "Statement": [
          {
              "Action": [
                  "secretsmanager:GetResourcePolicy",
                  "secretsmanager:GetSecretValue",
                  "secretsmanager:DescribeSecret",
                  "secretsmanager:ListSecretVersionIds",
                  "cloudformation:CreateChangeSet",
                  "cloudformation:DescribeChangeSet",
                  "cloudformation:DescribeStackResource",
                  "cloudformation:DescribeStacks",
                  "cloudformation:ExecuteChangeSet",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeVpcs",
                  "kms:DescribeKey",
                  "kms:ListAliases",
                  "kms:ListKeys",
                  "lambda:ListFunctions",
                  "tag:GetResources"
              ],
              "Effect": "Allow",
              "Resource": "*"
          },
          {
              "Action": [
                  "lambda:AddPermission",
                  "lambda:CreateFunction",
                  "lambda:GetFunction",
                  "lambda:InvokeFunction",
                  "lambda:UpdateFunctionConfiguration"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:*:*:function:SecretsManager*"
          },
          {
              "Action": [
                  "serverlessrepo:CreateCloudFormationChangeSet",
                  "serverlessrepo:GetApplication"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:serverlessrepo:*:*:applications/SecretsManager*"
          },
          {
              "Action": [
                  "s3:GetObject"
              ],
              "Effect": "Allow",
              "Resource": [
                  "arn:aws:s3:::awsserverlessrepo-changesets*",
                  "arn:aws:s3:::secrets-manager-rotation-apps-*/*"
              ]
          }
      ]
  },
            "Roles":  ["EMR_EC2_DefaultRole"]
  
        }
    },
  
  
  
  
  
  
        "EMRCluster": {
          "Type": "AWS::EMR::Cluster",
          "Properties": {
            "Instances": {
              "MasterInstanceGroup": {
                "InstanceCount": 1,
                "InstanceType": "m5.xlarge",
                "Market": "ON_DEMAND",
                "Name": "cfnMaster"
              },
              "CoreInstanceGroup": {
                "InstanceCount": { "Ref" : "myEMRCoreSize" },
                "InstanceType": { "Ref" : "myEMRInstanceType" },
                "Market": "ON_DEMAND",
                "Name": "cfnCore"
              },
              "TerminationProtected" : "false",
              "Ec2KeyName" : { "Ref" : "EMRKeyPair"},
              "Ec2SubnetId" : { "Ref" : "MyEMRSubnetGroup" }
            },
        "Name": "EMR-Deequ-Validation",
  
        "LogUri" : { "Fn::Join" : [ "", ["s3://", { "Ref" : "EMRLogFileDir" },"/"]]},
  
  
          "JobFlowRole" : "EMR_EC2_DefaultRole",
          "ServiceRole" : "EMR_DefaultRole",
          "ReleaseLabel" : "emr-5.31.0",
        "Applications" : [
  
            {
                "Name" : "Hive"
            },
        {
                "Name" : "Spark"
            }
            ],
  
  
  
        "Configurations": [{
          "Classification": "hive-site",
          "ConfigurationProperties": {
            "hive.metastore.client.factory.class": "com.amazonaws.glue.catalog.metastore.AWSGlueDataCatalogHiveClientFactory"
          }
        },
            {
          "Classification": "spark-hive-site",
          "ConfigurationProperties": {
            "hive.metastore.client.factory.class": "com.amazonaws.glue.catalog.metastore.AWSGlueDataCatalogHiveClientFactory"
          }
        }
      ],
  
  
            "Tags": [
              {
                "Key": "Dept",
                "Value": "EMR-Presto"
              }
            ]
          },
          "DependsOn" :  ["SourceDBRds","SecretManagerPolicy"]
        },
  
        "DQsetupStep": {
          "Properties": {
            "ActionOnFailure": "CONTINUE",
            "HadoopJarStep": {
              "Args": ["s3://data-validation-blog/Griffin_Artifacts/bootstrap_blog.sh",
                {
                  "Ref": "AWS::Region"
                }
              ],
              "Jar": "s3://elasticmapreduce/libs/script-runner/script-runner.jar",
              "MainClass": ""
                      },
            "JobFlowId": {
              "Ref": "EMRCluster"
            },
            "Name": "DQsetupStep"
          },
          "Type": "AWS::EMR::Step"
        },
  
  
        "SparkDBLoad": {
          "Properties": {
            "ActionOnFailure": "CONTINUE",
            "HadoopJarStep": {
              "Args": ["spark-submit", "--deploy-mode", "client", "s3://aws-bigdata-blog/artifacts/datamigration-validation-using-pydeequ/code/blogstep3.py",
                {
                  "Ref": "AWS::Region"
                }
              ],
              "Jar": "command-runner.jar"
                      },
            "JobFlowId": {
              "Ref": "EMRCluster"
            },
            "Name": "SparkDBLoad"
          },
          "Type": "AWS::EMR::Step",
          "DependsOn" : "DQsetupStep"
        }
  
  
  
      },
   
    "Outputs" : {
        "EMRCluster" : {
          "Description" : "EMR Cluster DNS",
          "Value" : { "Fn::GetAtt": ["EMRCluster","MasterPublicDNS" ]}
          },
        "EMRClusterID" : {
          "Description" : "EMR Cluster DNS",
          "Value" : {  "Ref": "DBName" }}
    }
  }
  
